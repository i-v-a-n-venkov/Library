// <auto-generated />
using System;
using Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

namespace Data.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20200416070719_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("Data.Models.AuthorTable", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("AuthorName")
                        .IsRequired();

                    b.Property<int>("BookTableId");

                    b.HasKey("AuthorId");

                    b.HasIndex("BookTableId");

                    b.ToTable("AUTHORS");
                });

            modelBuilder.Entity("Data.Models.BookTable", b =>
                {
                    b.Property<int>("Bookid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BOOKID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("BookTitle")
                        .IsRequired()
                        .HasColumnName("BOOK_TITLE")
                        .HasColumnType("VARCHAR2(100)");

                    b.Property<int?>("Pages")
                        .HasColumnName("PAGES");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnName("PUBLISH_DATE")
                        .HasColumnType("DATE");

                    b.HasKey("Bookid")
                        .HasName("BOOKS_CONST1_PK");

                    b.HasIndex("BookTitle")
                        .IsUnique()
                        .HasName("BOOKS_CONST2_UK");

                    b.HasIndex("Bookid")
                        .IsUnique()
                        .HasName("BOOKS_CONST1_PK");

                    b.ToTable("BOOKS");
                });

            modelBuilder.Entity("Data.Models.AuthorTable", b =>
                {
                    b.HasOne("Data.Models.BookTable", "Book")
                        .WithMany("AuthorTables")
                        .HasForeignKey("BookTableId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
